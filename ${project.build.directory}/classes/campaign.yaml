openapi: 3.0.3
info:
  title: campaigns
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://petstore3.swagger.io/api/v3
paths:
  /campaigns:
    put:
      summary: Update existing campaign
      description: Update an existing campaign by Id
      operationId: updateCampaign
      requestBody:
        description: Update an existent campaign
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Campaign'
        required: true
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid ID supplied
        '404':
          description: campaign not found
        '405':
          description: Validation exception
    post:
      summary: Add a new campaign to the store
      description: Add a new campaign to the store
      operationId: addCampaign
      requestBody:
        description: Create a new campaign in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Campaign'
        required: true
      responses:
        '200':
          description: Successful operation
        '405':
          description: Invalid input
    get:
      summary: List campaigns
      operationId: listCampaigns
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Campaign'
  /campaigns/{campaignId}:
    get:
      summary: Find campaign by ID
      description: Returns a single campaign
      operationId: getCampaignById
      parameters:
        - name: campaignId
          in: path
          description: ID of campaign to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
            application/xml:
              schema:
                $ref: '#/components/schemas/Campaign'
        '400':
          description: Invalid ID supplied
        '404':
          description: campaign not found
    delete:
      summary: Deletes a campaign
      description: delete a campaign
      operationId: deleteCampaign
      parameters:
        - name: campaignId
          in: path
          description: campaign id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid campaign value
components:
  schemas:
    Status:
      type: string
      enum:
        - 'ON'
        - 'OFF'
    Town:
      type: object
      properties:
        id:
          type: integer
          format: int64
          writeOnly: true
        name:
          type: string
          readOnly: true
      required:
        - id
        - name
    Campaign:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        name:
          type: string
        keyWords:
          type: array
          items:
            type: string
        bidAmount:
          type: number
          format: double
          minimum: 100
        campaignFund:
          type: string
        status:
          $ref: '#/components/schemas/Status'
        town:
          $ref: '#/components/schemas/Town'
        radius:
          type: number
          format: double
      required:
        - id
        - name
        - keyWords
        - bidAmount
        - campaignFund
        - status
        - radius